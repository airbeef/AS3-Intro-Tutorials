package {	import flash.display.MovieClip;	import flash.events.Event;	public class Main_SpaceShooter extends MovieClip	{		//Arrays to store the player's and enemy's bullets		private var _bullets:Array;		private var _playerScore:uint;		private var _robotScore:uint;		public function Main_SpaceShooter()		{			//Initialize _bullets arrays			_bullets = new Array();			_bullets = [];			//Initialize player and enemy scores			_playerScore = 0;			_robotScore = 0;			//Add an onEnterFrame event listener			addEventListener(Event.ENTER_FRAME,onEnterFrame);			//Add listeners to listen for the bullets' events			stage.addEventListener("bulletCreated", onBulletCreated);		}		private function onBulletCreated(event:Event)		{			//Add new bullet to the _bullets array			_bullets.push(MovieClip(event.target));			trace(event.target.name);		}		private function onEnterFrame(event:Event):void		{			bulletDisplay.text = "Bullets on the stage: " + String(_bullets.length);			//Bullet collisions with objects			for (var i:int = 0; i < _bullets.length; i++)			{				switch (_bullets[i].bulletType)				{					case "circle" :						//Check for a collision with the player						if (player.hitTestPoint(_bullets[i].x,_bullets[i].y,true))						{							//Remove the bullet from the stage							removeChild(_bullets[i]);														//Remove bullet from array							_bullets.splice(i,1);														//Subtract 1 from the counter to compensate							//for the removed element							i--;							//Update the robot's score							_robotScore++;							//Update the robot's score display on the stage							robotScoreDisplay.text = String(_robotScore);						}						break;					case "star" :						//Check for a collision with the robot						if (robot.hitTestPoint(_bullets[i].x, _bullets[i].y, true))						{							//Remove the bullet from the stage							removeChild(_bullets[i]);														//Remove bullet from array							_bullets.splice(i, 1);														//Subtract 1 from the counter to compensate							//for the removed element							i--;														//Update the enemy's score							_playerScore++;							//Update the player's score display on the stage							playerScoreDisplay.text = String(_playerScore);						}						break;					}				}								//Bullet stage Boundaries:				for (var j:int = 0; j < _bullets.length; j++)				{					//Top					if (_bullets[j].y + _bullets[j].height / 2 < 0)					{						removeChild(_bullets[j]);						_bullets.splice(j, 1);						j--;					}					//Bottom					else if (_bullets[j].y - _bullets[j].height / 2 > stage.stageHeight)		    		{						removeChild(_bullets[j]);						_bullets.splice(j, 1);						j--;					}					//Left					else if (_bullets[j].x + _bullets[j].width / 2 < 0)					{						removeChild(_bullets[j]);						_bullets.splice(j, 1);						j--;					}					//Right					else if (_bullets[j].x - _bullets[j].width / 2 > stage.stageWidth)					{						removeChild(_bullets[j]);						_bullets.splice(j, 1);						j--;					}				}		}	}}